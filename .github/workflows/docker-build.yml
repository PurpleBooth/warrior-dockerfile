name: ci

on:
  push:
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.2.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.4.1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1.10.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2.6.1
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/386
        push: ${{ github.ref == 'refs/heads/main' }}
        cache-from: type=registry,ref=ghcr.io/purplebooth/warrior-dockerfile:latest
        cache-to: type=inline
        tags: |
          ghcr.io/purplebooth/warrior-dockerfile:git-${{ github.sha }}
    - uses: chaaz/versio-actions/install@v1.1
      name: Install versio
    - run: echo ::set-output "name=PREVIOUS_VERSION::$(  versio info -R -a -V | jq
        -r .[0].version )"
      id: get_previous_version
    - run: echo ::set-output "name=BUMP::$( versio release --dry-run )"
      id: get_versio_plan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USER: ${{ github.actor }}
    - name: Generate release
      if: ${{ contains(steps.get_versio_plan.outputs.BUMP, ' -> ') && github.ref ==
        'refs/heads/main' }}
      run: |
        versio release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USER: ${{ github.actor }}
    - run: echo ::set-output "name=VERSION::$(  versio info -R -a -V | jq -r .[0].version
        )"
      if: ${{ contains(steps.get_versio_plan.outputs.BUMP, ' -> ') && github.ref ==
        'refs/heads/main' }}
      id: get_version
    - name: Build and push
      uses: docker/build-push-action@v2.6.1
      if: ${{ contains(steps.get_versio_plan.outputs.BUMP, ' -> ') && github.ref ==
        'refs/heads/main' }}
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
        push: ${{ github.ref == 'refs/heads/main' }}
        cache-from: type=registry,ref=ghcr.io/purplebooth/warrior-dockerfile:latest
        cache-to: type=inline
        tags: |
          ghcr.io/purplebooth/warrior-dockerfile:v${{ steps.get_version.outputs.VERSION }}
          ghcr.io/purplebooth/warrior-dockerfile:latest
    - uses: dlavrenuek/conventional-changelog-action@v1.1.2
      if: ${{ contains(steps.get_versio_plan.outputs.BUMP, ' -> ') && github.ref ==
        'refs/heads/main' }}
      id: changelog
      with:
        from: v${{ steps.get_previous_version.outputs.PREVIOUS_VERSION }}
        to: v${{ steps.get_version.outputs.VERSION }}
    - id: create_release
      if: ${{ contains(steps.get_versio_plan.outputs.BUMP, ' -> ') && github.ref ==
        'refs/heads/main' }}
      uses: ncipollo/release-action@v1.8.6
      with:
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: ${{ steps.changelog.outputs.body }}
        name: Release v${{ steps.get_version.outputs.VERSION }}
        tag: v${{ steps.get_version.outputs.VERSION }}
